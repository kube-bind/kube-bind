name: image

on:
  push:
    tags:
    - 'v*'

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: v1.24.0
        check-latest: true
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    # We need this to remove local tags that are not semver so goreleaser doesn't get confused.
    - name: Delete non-semver tags
      run: 'git tag -d $(git tag -l | grep -v "^v")'
    
    # Set up Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # If you notice signing errors, you may need to update the cosign version.
    - uses: sigstore/cosign-installer@v3.7.0
    
    - name: Install ko
      run: go install github.com/google/ko@latest

    - name: Set LDFLAGS
      run: echo LDFLAGS="$(make ldflags)" | tee -a >> $GITHUB_ENV

    # Login to GitHub Container Registry (used by both ko and Docker)
    - name: Login to GitHub Container Registry  
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build ko from HEAD, build and push an image tagged with the commit SHA,
    # then keylessly sign it with cosign.
    - name: Publish and sign konnector image
      env:
        KO_DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/konnector
        COSIGN_EXPERIMENTAL: 'true'
      run: |
        img=$(ko build --bare --platform=all -t latest -t ${{ github.sha }} -t ${{github.ref_name}} ./cmd/konnector)
        echo "built ${img}"
        cosign sign ${img} \
            --yes \
            -a sha=${{ github.sha }} \
            -a ref=${{ github.ref }} \
            -a run_id=${{ github.run_id }} \
            -a run_attempt=${{ github.run_attempt }}

    # Build and push backend image using Dockerfile (includes frontend)
    # Note: Backend image uses Dockerfile to include both Go backend + Vue.js frontend
    # while konnector continues to use ko for Go-only builds
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      id: build
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/backend:latest
          ghcr.io/${{ github.repository_owner }}/backend:${{ github.sha }}
          ghcr.io/${{ github.repository_owner }}/backend:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          LDFLAGS=${{ env.LDFLAGS }}
        labels: |
          org.opencontainers.image.title=Kube Bind Backend
          org.opencontainers.image.description=Kube Bind backend with integrated Vue.js frontend
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ github.ref_name }}

    # Sign the backend image
    - name: Sign backend image
      env:
        COSIGN_EXPERIMENTAL: 'true'
      run: |
        img="ghcr.io/${{ github.repository_owner }}/backend@${{ steps.build.outputs.digest }}"
        echo "signing ${img}"
        cosign sign ${img} \
            --yes \
            -a sha=${{ github.sha }} \
            -a ref=${{ github.ref }} \
            -a run_id=${{ github.run_id }} \
            -a run_attempt=${{ github.run_attempt }}

    - uses: actions/delete-package-versions@v3
      with:
        package-name: 'kube-bind'
        min-versions-to-keep: 10
        delete-only-pre-release-versions: "true"
