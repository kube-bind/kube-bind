apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: apiserviceexportrequests.kube-bind.io
spec:
  group: kube-bind.io
  names:
    categories:
    - kube-bindings
    kind: APIServiceExportRequest
    listKind: APIServiceExportRequestList
    plural: apiserviceexportrequests
    singular: apiserviceexportrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "APIServiceExportRequest is represents a request session of kubectl-bind-apiservice.
          \n The service provider can prune these objects after some time."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec specifies how an API service from a service provider
              should be bound in the local consumer cluster.
            properties:
              parameters:
                description: parameters holds service provider specific parameters
                  for this binding request.
                type: object
                x-kubernetes-preserve-unknown-fields: true
                x-kubernetes-validations:
                - message: parameters are immutable
                  rule: self == oldSelf
              resources:
                description: resources is a list of resources that should be exported.
                items:
                  properties:
                    group:
                      default: ""
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    permissionClaims:
                      description: permissionClaims records decisions about permission
                        claims requested by the API service provider. Individual claims
                        can be accepted or rejected. If accepted, the API service
                        provider gets the requested access to the specified resources
                        in this workspace. Access is granted per GroupResource, identity,
                        and other properties.
                      items:
                        description: "PermissionClaim selects objects of a GVR that
                          a service provider may request and that a consumer may accept
                          and allow the service provider access to. \n TODO fix validation
                          +kubebuilder:validation:XValidation:rule=\"!(self.create.donate
                          && self.adopt)\",message=\"donate and adopt are mutually
                          exclusive\""
                        properties:
                          adopt:
                            description: adopt set to true means that objects created
                              by the consumer are adopted by the provider. i.e. the
                              provider will become the owner.
                            type: boolean
                          create:
                            description: "only for owner Provider \n create determines
                              whether the kube-bind konnector will sync matching objects
                              from the provider side down to the consumer cluster."
                            properties:
                              donate:
                                description: donate set to true means that a newly
                                  created object by the provider is immediately owned
                                  by the consumer. If false, the object stays in ownership
                                  of the provider
                                type: boolean
                            type: object
                          global:
                            description: Global claims global resources for the given
                              group/resource. This is mutually exclusive with resourceSelector.
                            type: boolean
                          group:
                            default: ""
                            description: group is the name of an API group. For core
                              groups this is the empty string '""'.
                            pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                            type: string
                          onConflict:
                            description: onConflict determines how the conflicts between
                              objects on the consumer side will be resolved.
                            properties:
                              providerOverrides:
                                description: providerOverrides will make the provider
                                  override any object that might already exist in
                                  the consumer cluster if it has the same namespaced
                                  name as a resource created by the provider, but
                                  is not the result of syncing.
                                type: boolean
                              recreateWhenConsumerSideDeleted:
                                description: recreateWhenConsumerSideDeleted set to
                                  true means the provider will recreate the object
                                  in case the object is missing on the consumer side.
                                  Even if the consumer mistakenly or intentionally
                                  deletes the objet, the provider will recreate it.
                                  If the field is set as false, the provider will
                                  not recreate the object in case the object is deleted
                                  on the RecreateWhenConsumerSideDeleted side.
                                type: boolean
                            type: object
                          required:
                            description: required indicates whether the APIServiceBinding
                              will work if this claim is not accepted.
                            type: boolean
                          resource:
                            description: 'resource is the name of the resource. Note:
                              it is worth noting that you can not ask for permissions
                              for resource provided by a CRD not provided by an service
                              binding export.'
                            pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                            type: string
                          selector:
                            description: selector selects which resources are affected
                              by this claim.
                            properties:
                              name:
                                description: name of an object within a claimed group/resource.
                                  It matches the metadata.name field of the underlying
                                  object. If name is unset, all objects in bound namespaces
                                  will be claimed.
                                maxLength: 253
                                minLength: 1
                                pattern: ^([a-z0-9][-a-z0-9_.]*)?[a-z0-9]$
                                type: string
                              owner:
                                enum:
                                - Provider
                                - Consumer
                                type: string
                            type: object
                          update:
                            description: update lists a number of claimed permissions
                              for the provider. "field" and "preserving" are mutually
                              exclusive.
                            properties:
                              alwaysRecreate:
                                description: alwaysRecreate, when true will make the
                                  konnector delete the old object and create a new
                                  one instead of updating. Useful for immutable objects.
                                type: boolean
                              fields:
                                description: fields are the fields owned by the owner
                                  of the claim. If the owner sets values of those
                                  fields, they will be synced to the other participant.
                                  Mutually exclusive with preservings.
                                items:
                                  type: string
                                type: array
                              preservings:
                                description: Preservings are the fields that are preserved
                                  by the konnector during synchronization. The owner
                                  is not able to set those fields. If the owner changes
                                  the value of these fields, their change will be
                                  overwritten.
                                items:
                                  type: string
                                type: array
                            type: object
                          version:
                            type: string
                        required:
                        - resource
                        - version
                        type: object
                      type: array
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an service binding export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                    versions:
                      description: versions is a list of versions that should be exported.
                        If this is empty a sensible default is chosen by the service
                        provider.
                      items:
                        type: string
                      type: array
                  required:
                  - resource
                  type: object
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: resources are immutable
                  rule: self == oldSelf
            required:
            - resources
            type: object
          status:
            default: {}
            description: status contains reconciliation information for a service
              binding.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  ClusterBinding. It is updated by the konnector and the service provider.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              phase:
                default: Pending
                description: phase is the current phase of the binding request. It
                  starts in Pending and transitions to Succeeded or Failed. See the
                  condition for detailed information.
                enum:
                - Pending
                - Failed
                - Succeeded
                type: string
              terminalMessage:
                description: terminalMessage is a human readable message that describes
                  the reason for the current phase.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
