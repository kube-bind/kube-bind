apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: apiserviceexportrequests.kube-bind.io
spec:
  group: kube-bind.io
  names:
    categories:
    - kube-bindings
    kind: APIServiceExportRequest
    listKind: APIServiceExportRequestList
    plural: apiserviceexportrequests
    singular: apiserviceexportrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "APIServiceExportRequest is represents a request session of kubectl-bind-apiservice.
          \n The service provider can prune these objects after some time."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec specifies how an API service from a service provider
              should be bound in the local consumer cluster.
            properties:
              parameters:
                description: parameters holds service provider specific parameters
                  for this binding request.
                type: object
                x-kubernetes-preserve-unknown-fields: true
                x-kubernetes-validations:
                - message: parameters are immutable
                  rule: self == oldSelf
              resources:
                description: resources is a list of resources that should be exported.
                items:
                  properties:
                    group:
                      default: ""
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    permissionClaims:
                      description: permissionClaims records decisions about permission
                        claims requested by the service provider. Individual claims
                        can be accepted or rejected. If accepted, the API service
                        provider gets the requested access to the specified resources
                        in this workspace. Access is granted per GroupResource, identity,
                        and other properties.
                      items:
                        description: permissionClaim selects objects of a GVR that
                          a service provider may request and that a consumer may accept
                          and allow the service provider access to.
                        properties:
                          autoAdopt:
                            description: autoAdopt set to true means that objects
                              created by the consumer are adopted by the provider.
                              i.e. the provider will become the owner. Mutually exclusive
                              with autoDonate.
                            type: boolean
                          autoDonate:
                            description: autoDonate set to true means that a newly
                              created object by the provider is immediately owned
                              by the consumer. If false, the object stays in ownership
                              of the provider. Mutually exclusive with autoDonate.
                            type: boolean
                          create:
                            description: create determines whether the kube-bind konnector
                              will sync matching objects from the provider cluster
                              down to the consumer cluster. only for owner Provider
                            properties:
                              replaceExisting:
                                description: "replaceExisting means that an existing
                                  object owned by the consumer will be replaced by
                                  the provider object. \n If set to false, and a conflicting
                                  consumer object exists, it is not touched."
                                type: boolean
                            type: object
                          group:
                            default: ""
                            description: group is the name of an API group. For core
                              groups this is the empty string '""'.
                            pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                            type: string
                          onConflict:
                            description: onConflict determines how the conflicts between
                              objects on the consumer cluster will be resolved.
                            properties:
                              recreateWhenConsumerSideDeleted:
                                default: true
                                description: "recreateWhenConsumerSideDeleted set
                                  to true (the default) means the provider will recreate
                                  the object in case the object is missing on the
                                  consumer cluster, but has been synchronized before.
                                  \n If set to false, deleted provider-owned objects
                                  get deleted on the provider cluster as well. \n
                                  Even if the consumer mistakenly or intentionally
                                  deletes the object, the provider will recreate it.
                                  If the field is set as false, the provider will
                                  not recreate the object in case the object is deleted
                                  on the consumer cluster."
                                type: boolean
                            type: object
                          read:
                            description: read claims read access to matching objects
                              for the provider. reading of the claimed object(s) is
                              always claimed. By default no labels and annotations
                              are read. Reading of labels and annotations can be claimed
                              optionally by adding labels and annotations items. If
                              labels on consumer owned objects that are set by the
                              consumer are read, labelsOnProviderOwnedObjects and
                              annotationsOnProviderOwnedObjects can be set.
                            properties:
                              annotations:
                                description: annotations is a list of claimed annotation
                                  key wildcard patterns that are synchronized from
                                  the consumer cluster to the provider on objects
                                  that are owned by the consumer.
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                              labels:
                                description: labels is a list of claimed label key
                                  wildcard patterns that are synchronized from the
                                  consumer cluster to the provider on objects that
                                  are owned by the consumer.
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                              labelsOnProviderOwnedObjects:
                                description: labelsOnProviderOwnedObjects is a list
                                  of claimed label key wildcard patterns that are
                                  synchronized from the consumer cluster to the provider
                                  on objects owned by the provider.
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                              overrideAnnotations:
                                description: overrideAnnotations is a list of claimed
                                  annotation key wildcard patterns that are synchronized
                                  from the consumer cluster to the provider on objects
                                  owned by the provider.
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          required:
                            description: required indicates whether the APIServiceBinding
                              will work if this claim is not accepted. If a required
                              claim is denied, the binding is aborted.
                            type: boolean
                          resource:
                            description: 'resource is the name of the resource. Note:
                              it is worth noting that you can not ask for permissions
                              for resource provided by a CRD not provided by an service
                              binding export.'
                            pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                            type: string
                          selector:
                            description: selector selects which resources are being
                              claimed. If unset, all resources across all namespaces
                              are being claimed.
                            properties:
                              fieldSelectors:
                                description: fieldSelectors is a list of field selectors
                                  matching selected resources, see https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/.
                                items:
                                  type: string
                                type: array
                              labelSelectors:
                                description: labelSelectors is a list of label selectors
                                  matching selected resources. label selectors follow
                                  the same rules as kubernetes label selectors, see
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/.
                                items:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type: array
                              names:
                                default:
                                - '*'
                                description: "names is a list of specific resource
                                  names to select. Names matches the metadata.name
                                  field of the underlying object. An entry of \"*\"
                                  anywhere in the list means all object names of the
                                  group/resource within the \"namespaces\" field are
                                  claimed. Wildcard entries other than \"*\" and regular
                                  expressions are currently unsupported. If a resources
                                  name matches any value in names, the resource name
                                  is considered matching. \n // +kubebuilder:validation:XValidation:rule=\"self.all(n,
                                  n.matches('^[A-z-]+|[*]$'))\",message=\"only names
                                  or * are allowed\""
                                items:
                                  type: string
                                type: array
                              namespaces:
                                default:
                                - '*'
                                description: "namespaces represents namespaces where
                                  an object of the given group/resource may be managed.
                                  Namespaces matches against the metadata.namespace
                                  field. A value of \"*\" matches namespaced objects
                                  across all namespaces. If a resources namespace
                                  matches any value in namespaces, the resource namespace
                                  is considered matching. If the claim is for a cluster-scoped
                                  resource, namespaces has to explicitly be set to
                                  an empty array to prevent defaulting to \"*\". If
                                  the \"names\" field is unset, all objects of the
                                  group/resource within the listed namespaces (or
                                  cluster) will be claimed. \n // +kubebuilder:validation:XValidation:rule=\"self.all(n,
                                  n.matches('^[A-z-]+|[*]$'))\",message=\"only names
                                  or * are allowed\""
                                items:
                                  type: string
                                type: array
                              owner:
                                description: owner matches the resource's owner. If
                                  an owner selector is set, resources owned by other
                                  owners will not be claimed. Resources without a
                                  present owner will be considered, if configured
                                  owner could be the owner of the object. For example,
                                  if the consumer creates a resource that is claimed
                                  by the provider for reading. In this case the resource
                                  will be marked as owned by the consumer, and handled
                                  as such in further reconciliations. An unset owner
                                  selector means objects from both sides are considered.
                                enum:
                                - Provider
                                - Consumer
                                type: string
                            type: object
                          update:
                            description: update lists which updates to objects on
                              the consumer cluster are claimed. By default, the whole
                              object is synced, but metadata is not.
                            properties:
                              alwaysRecreate:
                                description: "alwaysRecreate, when true will delete
                                  the old object and create new ones instead of updating.
                                  Useful for immutable objects. \n This does not apply
                                  to metadata field updates."
                                type: boolean
                              annotations:
                                description: "annotations is a list of claimed annotation
                                  keys or annotation wildcard patterns that are synchronized
                                  from the provider to the consumer for objects owned
                                  by the provider. \n By default, no annotations are
                                  synced."
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                              annotationsOnConsumerOwnedObjects:
                                description: "annotationsOnConsumerOwnedObjects is
                                  a list of claimed annotation key wildcard patterns
                                  that are synchronized from the provider to the consumer
                                  for objects owned by the consumer. \n By default,
                                  no annotations are synced."
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                              fields:
                                description: "fields are a list of JSON Paths describing
                                  which parts of an object the provider wants to control.
                                  \n This field is ignored if the owner in the claim
                                  selector is set to \"Provider\"."
                                items:
                                  type: string
                                type: array
                              labels:
                                description: "labels is a list of claimed label keys
                                  or label wildcard patterns that are synchronized
                                  from the provider to the consumer for objects owned
                                  by the provider. \n By default, no labels are synced."
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                              labelsOnConsumerOwnedObjects:
                                description: "labelsOnConsumerOwnedObjects is a list
                                  of claimed label key wildcard patterns that are
                                  synchronized from the provider to the consumer for
                                  objects owned by the consumer. \n By default, no
                                  labels are synced."
                                items:
                                  properties:
                                    pattern:
                                      type: string
                                  type: object
                                type: array
                              preserving:
                                description: "preserving is a list of JSON Paths describing
                                  which parts of an object owned by the provider the
                                  consumer keeps controlling. \n This field is ignored
                                  if the owner in the claim selector is set to \"Consumer\"."
                                items:
                                  type: string
                                type: array
                            type: object
                          version:
                            description: version is the version of the claimed resource.
                            minLength: 1
                            type: string
                        required:
                        - resource
                        - version
                        type: object
                        x-kubernetes-validations:
                        - message: donate and adopt are mutually exclusive
                          rule: '!(has(self.autoDonate) && self.autoDonate && has(self.autoAdopt)
                            && self.autoAdopt)'
                      type: array
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an service binding export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                    versions:
                      description: versions is a list of versions that should be exported.
                        If this is empty a sensible default is chosen by the service
                        provider.
                      items:
                        type: string
                      type: array
                  required:
                  - resource
                  type: object
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: resources are immutable
                  rule: self == oldSelf
            required:
            - resources
            type: object
          status:
            default: {}
            description: status contains reconciliation information for a service
              binding.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  ClusterBinding. It is updated by the konnector and the service provider.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              phase:
                default: Pending
                description: phase is the current phase of the binding request. It
                  starts in Pending and transitions to Succeeded or Failed. See the
                  condition for detailed information.
                enum:
                - Pending
                - Failed
                - Succeeded
                type: string
              terminalMessage:
                description: terminalMessage is a human readable message that describes
                  the reason for the current phase.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
