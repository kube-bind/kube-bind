apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: apiserviceexports.kube-bind.io
spec:
  group: kube-bind.io
  names:
    categories:
    - kube-bindings
    kind: APIServiceExport
    listKind: APIServiceExportList
    plural: apiserviceexports
    singular: apiserviceexport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Established")].status
      name: Established
      priority: 5
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'APIServiceExport specifies the resource to be exported. It is
          mostly a CRD: - the spec is a CRD spec, but without webhooks - the status
          reflects that on the consumer cluster'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec specifies the resource.
            properties:
              group:
                description: "group is the API group of the defined custom resource.
                  Empty string means the core API group. \tThe resources are served
                  under `/apis/<group>/...` or `/api` for the core group."
                type: string
              informerScope:
                description: "informerScope is the scope of the APIServiceExport.
                  It can be either Cluster or Namespace. \n Cluster:    The konnector
                  has permission to watch all namespaces at once and cluster-scoped
                  resources. This is more efficient than watching each namespace individually.
                  Namespaced: The konnector has permission to watch only single namespaces.
                  This is more resource intensive. And it means cluster-scoped resources
                  cannot be exported."
                enum:
                - Cluster
                - Namespaced
                type: string
                x-kubernetes-validations:
                - message: informerScope is immutable
                  rule: self == oldSelf
              names:
                description: names specify the resource and kind names for the custom
                  resource.
                properties:
                  categories:
                    description: categories is a list of grouped resources this custom
                      resource belongs to (e.g. 'all'). This is published in API discovery
                      documents, and used by clients to support invocations like `kubectl
                      get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: kind is the serialized kind of the resource. It is
                      normally CamelCase and singular. Custom resource instances will
                      use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the
                      form `<names.plural>.<group>`). Must be all lowercase.
                    type: string
                  shortNames:
                    description: shortNames are short names for the resource, exposed
                      in API discovery documents, and used by clients to support invocations
                      like `kubectl get <shortname>`. It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              permissionClaims:
                description: "permissionClaims is a list of permission claims that
                  the service provider asks the consumer to accept in the consumer
                  cluster binding to this export. The consumer can accept or deny
                  each claim. Some claims are required and with that a successful
                  binding is not possible. Others are optional. \n Note that a claim
                  added at a later point is not guaranteed to be seen and processed
                  (accepted or rejected) by the consumer."
                items:
                  properties:
                    create:
                      description: "create determines whether the provider can create
                        new objects in the consumer cluster by syncing a provider-owned
                        source to the consumer cluster. Created objects on the consumer
                        cluster are marked as owned by the provider by default. \n
                        Note that create permissions do not imply update permissions."
                      properties:
                        replaceExisting:
                          description: "replaceExisting means that an existing object
                            owned by the consumer will be replaced by the provider
                            object. \n If not true, and a conflicting consumer object
                            exists, it is not touched."
                          type: boolean
                      type: object
                    group:
                      default: ""
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    objectSelector:
                      description: selector restricts which objects of the given resource
                        are being claimed. If unset, all objects across all namespaces
                        are being claimed, both consumer- and provider owned.
                      properties:
                        fieldSelectors:
                          description: fieldSelectors is a disjunctive list of field
                            selectors, following the same rules as kubernetes field
                            selectors, see https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/,
                            i.e. each field selector can be a conjunction of requirements.
                          items:
                            type: string
                          type: array
                        labelSelectors:
                          description: labelSelectors is a disjunctive list of label
                            selectors, following the same rules as kubernetes label
                            selectors, see https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/.
                          items:
                            additionalProperties:
                              type: string
                            type: object
                          type: array
                        names:
                          default:
                          - '*'
                          description: names is a list of values selecting by metadata.name,
                            or "*" which matches all names.
                          items:
                            type: string
                          type: array
                          x-kubernetes-validations:
                          - message: only names or * are allowed
                            rule: self.all(n, n.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?|[*]$'))
                        namespaces:
                          default:
                          - '*'
                          description: namespaces is a list of values selecting by
                            metadata.namespace, or "*" which matches all namespaces,
                            or empty string that matches cluster-scoped resources.
                          items:
                            type: string
                          type: array
                          x-kubernetes-validations:
                          - message: only namespace names,* or empty string are allowed
                            rule: self.all(n, n.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?|[*]?$'))
                        owner:
                          description: owner set means that resources of a specific
                            owner are selected and those owned by the other side are
                            ignored. A resource on the consumer cluster is owned by
                            the consumer by default, if not marked as owned by the
                            provider through the `kube-bind.io/owner=provider` annotation.
                          enum:
                          - Provider
                          - Consumer
                          type: string
                      type: object
                    onConflict:
                      description: onConflict determines how conflicts between objects
                        on the consumer and provider clusters will be resolved.
                      properties:
                        recreateWhenConsumerSideDeleted:
                          default: true
                          description: "recreateWhenConsumerSideDeleted set to true
                            (the default) means the provider will recreate the object
                            in case the object is missing on the consumer cluster,
                            but has been synchronized before. \n If set to false,
                            deleted provider-owned objects get deleted on the provider
                            cluster as well."
                          type: boolean
                      type: object
                    ownerTransfer:
                      description: ownerTransfer determines how ownership of objects
                        is transferred between the consumer and the provider. By default,
                        no transfer happens. If set to Donate, objects created by
                        the provider on the consumer cluster are immediately donated
                        to the consumer. If set to Adopt, objects created by the consumer
                        on the consumer cluster are immediately owned by the provider
                        and synced to the provider cluster. Ownership determines the
                        direction of synchronization.
                      enum:
                      - Donate
                      - Adopt
                      - ""
                      type: string
                    read:
                      description: read claims read access for the provider to matching
                        objects, excluding labels and annotations by default. Read
                        access is realized by syncing the objects or fields from the
                        consumer cluster to the provider cluster.
                      properties:
                        annotations:
                          description: annotations is a list of claimed annotation
                            key wildcard patterns that are synchronized from the consumer
                            cluster to the provider on objects that are owned by the
                            consumer.
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                        annotationsOnProviderOwnedObjects:
                          description: overrideAnnotations is a list of claimed annotation
                            key wildcard patterns that are synchronized from the consumer
                            cluster to the provider on provider-owned objects.
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                        labels:
                          description: labels is a list of label key wildcard patterns
                            that are synchronized from the consumer to the provider
                            on consumer-owned objects.
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                        labelsOnProviderOwnedObjects:
                          description: LabelsOnProviderOwnedObjects is a list of claimed
                            label key wildcard patterns that are synchronized from
                            the consumer cluster to the provider on objects owned
                            by the provider.
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                      type: object
                    required:
                      description: required indicates whether the APIServiceBinding
                        will work if this claim is not accepted. If a required claim
                        is denied, the binding is aborted.
                      type: boolean
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an service binding export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                    update:
                      description: "update lists which updates to objects on the consumer
                        cluster are claimed. By default, the whole object is synced,
                        but metadata is not. \n Note that update permissions do not
                        imply create permissions."
                      properties:
                        alwaysRecreate:
                          description: "alwaysRecreate set to true means that matching
                            objects will be deleted and recreated on update. This
                            is useful for immutable objects. \n This does not apply
                            to metadata field updates."
                          type: boolean
                        annotations:
                          description: "annotations is a list of annotation key wildcard
                            patterns that are synced from the provider to the consumer
                            for provider-owned objects. \n By default, no annotations
                            are synced."
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                        annotationsOnConsumerOwnedObjects:
                          description: "annotationsOnConsumerOwnedObjects is a list
                            of annotation key wildcard patterns that are synchronized
                            from the provider to the consumer for consumer-owned objects.
                            \n By default, no annotations are synced."
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                        fields:
                          description: "fields are a list of JSON Paths in consumer-owned
                            objects on the consumer cluster that the provider wants
                            to control. \n This is ignored for provider-owned objects."
                          items:
                            type: string
                          type: array
                        labels:
                          description: "labels is a list of label key wildcard patterns
                            that are synced from the provider to the consumer for
                            provider-owned objects. \n By default, no labels are synced."
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                        labelsOnConsumerOwnedObjects:
                          description: "labelsOnConsumerOwnedObjects is a list of
                            label key wildcard patterns that are synced from the provider
                            to the consumer for consumer-owner objects. \n By default,
                            no labels are synced."
                          items:
                            properties:
                              pattern:
                                description: pattern is a wildcard pattern that is
                                  matched against the key. This means it is either
                                  a literal string or starts or ends in `*` but is
                                  not '*' itself.
                                minLength: 1
                                type: string
                            required:
                            - pattern
                            type: object
                          type: array
                        preserving:
                          description: "preserving is a list of JSON Paths in provider-owned
                            objects on the consumer cluster that the consumer keeps
                            controlling, i.e. that are not overwritten by the provider,
                            but synced back to the provider side. \n This is ignored
                            for consumer-owned objects."
                          items:
                            type: string
                          type: array
                      type: object
                    version:
                      description: version is the version of the claimed resource.
                      minLength: 1
                      type: string
                  required:
                  - resource
                  - version
                  type: object
                type: array
              scope:
                description: scope indicates whether the defined custom resource is
                  cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
                enum:
                - Cluster
                - Namespaced
                type: string
              versions:
                description: "versions is the API version of the defined custom resource.
                  \n Note: the OpenAPI v3 schemas must be equal for all versions until
                  CEL version migration is supported."
                items:
                  description: APIServiceExportVersion describes one API version of
                    a resource.
                  properties:
                    additionalPrinterColumns:
                      description: additionalPrinterColumns specifies additional columns
                        returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                        for details. If no columns are specified, a single column
                        displaying the age of the custom resource is used.
                      items:
                        description: CustomResourceColumnDefinition specifies a column
                          for server side printing.
                        properties:
                          description:
                            description: description is a human readable description
                              of this column.
                            type: string
                          format:
                            description: format is an optional OpenAPI type definition
                              for this column. The 'name' format is applied to the
                              primary identifier column to assist in clients identifying
                              column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                              for details.
                            type: string
                          jsonPath:
                            description: jsonPath is a simple JSON path (i.e. with
                              array notation) which is evaluated against each custom
                              resource to produce the value for this column.
                            type: string
                          name:
                            description: name is a human readable name for the column.
                            type: string
                          priority:
                            description: priority is an integer defining the relative
                              importance of this column compared to others. Lower
                              numbers are considered higher priority. Columns that
                              may be omitted in limited space scenarios should be
                              given a priority greater than 0.
                            format: int32
                            type: integer
                          type:
                            description: type is an OpenAPI type definition for this
                              column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                              for details.
                            type: string
                        required:
                        - jsonPath
                        - name
                        - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    deprecated:
                      description: deprecated indicates this version of the custom
                        resource API is deprecated. When set to true, API requests
                        to this version receive a warning header in the server response.
                        Defaults to false.
                      type: boolean
                    deprecationWarning:
                      description: deprecationWarning overrides the default warning
                        returned to API clients. May only be set when `deprecated`
                        is true. The default warning indicates this version is deprecated
                        and recommends use of the newest served version of equal or
                        greater stability, if one exists.
                      type: string
                    name:
                      description: name is the version name, e.g. “v1”, “v2beta1”,
                        etc. The custom resources are served under this version at
                        `/apis/<group>/<version>/...` if `served` is true.
                      minLength: 1
                      pattern: ^v[1-9][0-9]*([a-z]+[1-9][0-9]*)?$
                      type: string
                    schema:
                      description: schema describes the structural schema used for
                        validation, pruning, and defaulting of this version of the
                        custom resource.
                      properties:
                        openAPIV3Schema:
                          description: openAPIV3Schema is the OpenAPI v3 schema to
                            use for validation and pruning.
                          type: object
                          x-kubernetes-map-type: atomic
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - openAPIV3Schema
                      type: object
                    served:
                      default: true
                      description: served is a flag enabling/disabling this version
                        from being served via REST APIs
                      type: boolean
                    storage:
                      description: storage indicates this version should be used when
                        persisting custom resources to storage. There must be exactly
                        one version with storage=true.
                      type: boolean
                    subresources:
                      description: subresources specify what subresources this version
                        of the defined custom resource have.
                      properties:
                        scale:
                          description: scale indicates the custom resource should
                            serve a `/scale` subresource that returns an `autoscaling/v1`
                            Scale object.
                          properties:
                            labelSelectorPath:
                              description: 'labelSelectorPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `status.selector`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.status`
                                or `.spec`. Must be set to work with HorizontalPodAutoscaler.
                                The field pointed by this JSON path must be a string
                                field (not a complex selector struct) which contains
                                a serialized label selector in string form. More info:
                                https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                                If there is no value under the given path in the custom
                                resource, the `status.selector` value in the `/scale`
                                subresource will default to the empty string.'
                              type: string
                            specReplicasPath:
                              description: specReplicasPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `spec.replicas`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.spec`.
                                If there is no value under the given path in the custom
                                resource, the `/scale` subresource will return an
                                error on GET.
                              type: string
                            statusReplicasPath:
                              description: statusReplicasPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `status.replicas`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.status`.
                                If there is no value under the given path in the custom
                                resource, the `status.replicas` value in the `/scale`
                                subresource will default to 0.
                              type: string
                          required:
                          - specReplicasPath
                          - statusReplicasPath
                          type: object
                        status:
                          description: 'status indicates the custom resource should
                            serve a `/status` subresource. When enabled: 1. requests
                            to the custom resource primary endpoint ignore changes
                            to the `status` stanza of the object. 2. requests to the
                            custom resource `/status` subresource ignore changes to
                            anything other than the `status` stanza of the object.'
                          type: object
                      type: object
                  required:
                  - name
                  - schema
                  - served
                  - storage
                  type: object
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - informerScope
            type: object
            x-kubernetes-validations:
            - message: informerScope is must be Cluster for cluster-scoped resources
              rule: self.scope == "Namespaced" || self.informerScope == "Cluster"
          status:
            description: status contains reconciliation information for the resource.
            properties:
              acceptedNames:
                description: acceptedNames are the names that are actually being used
                  to serve discovery. They may be different than the names in spec.
                properties:
                  categories:
                    description: categories is a list of grouped resources this custom
                      resource belongs to (e.g. 'all'). This is published in API discovery
                      documents, and used by clients to support invocations like `kubectl
                      get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: kind is the serialized kind of the resource. It is
                      normally CamelCase and singular. Custom resource instances will
                      use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the
                      form `<names.plural>.<group>`). Must be all lowercase.
                    type: string
                  shortNames:
                    description: shortNames are short names for the resource, exposed
                      in API discovery documents, and used by clients to support invocations
                      like `kubectl get <shortname>`. It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              conditions:
                description: conditions is a list of conditions that apply to the
                  APIServiceExport. It is updated by the konnector on the consumer
                  cluster.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              storedVersions:
                description: storedVersions lists all versions of CustomResources
                  that were ever persisted. Tracking these versions allows a migration
                  path for stored versions in etcd. The field is mutable so a migration
                  controller can finish a migration to another version (ensuring no
                  old objects are left in storage), and then remove the rest of the
                  versions from this list. Versions may not be removed from `spec.versions`
                  while they exist in this list.
                items:
                  type: string
                type: array
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: informerScope is immutable
          rule: self.metadata.name == self.spec.names.plural+"."+self.spec.group
    served: true
    storage: true
    subresources:
      status: {}
