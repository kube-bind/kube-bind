apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: apiserviceexports.kube-bind.io
spec:
  group: kube-bind.io
  names:
    categories:
    - kube-bindings
    kind: APIServiceExport
    listKind: APIServiceExportList
    plural: apiserviceexports
    singular: apiserviceexport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Established")].status
      name: Established
      priority: 5
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'APIServiceExport specifies the resource to be exported. It is
          mostly a CRD: - the spec is a CRD spec, but without webhooks - the status
          reflects that on the consumer cluster'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec specifies the resource.
            properties:
              group:
                description: "group is the API group of the defined custom resource.
                  Empty string means the core API group. \tThe resources are served
                  under `/apis/<group>/...` or `/api` for the core group."
                type: string
              informerScope:
                description: "informerScope is the scope of the APIServiceExport.
                  It can be either Cluster or Namespace. \n Cluster:    The konnector
                  has permission to watch all namespaces at once and cluster-scoped
                  resources. This is more efficient than watching each namespace individually.
                  Namespaced: The konnector has permission to watch only single namespaces.
                  This is more resource intensive. And it means cluster-scoped resources
                  cannot be exported."
                enum:
                - Cluster
                - Namespaced
                type: string
                x-kubernetes-validations:
                - message: informerScope is immutable
                  rule: self == oldSelf
              names:
                description: names specify the resource and kind names for the custom
                  resource.
                properties:
                  categories:
                    description: categories is a list of grouped resources this custom
                      resource belongs to (e.g. 'all'). This is published in API discovery
                      documents, and used by clients to support invocations like `kubectl
                      get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: kind is the serialized kind of the resource. It is
                      normally CamelCase and singular. Custom resource instances will
                      use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the
                      form `<names.plural>.<group>`). Must be all lowercase.
                    type: string
                  shortNames:
                    description: shortNames are short names for the resource, exposed
                      in API discovery documents, and used by clients to support invocations
                      like `kubectl get <shortname>`. It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              permissionClaims:
                items:
                  description: permissionClaim selects objects of a GVR that a service
                    provider may request and that a consumer may accept and allow
                    the service provider access to.
                  properties:
                    autoAdopt:
                      description: autoAdopt set to true means that objects created
                        by the consumer are adopted by the provider. i.e. the provider
                        will become the owner. Mutually exclusive with autoDonate.
                      type: boolean
                    autoDonate:
                      description: autoDonate set to true means that a newly created
                        object by the provider is immediately owned by the consumer.
                        If false, the object stays in ownership of the provider. Mutually
                        exclusive with autoDonate.
                      type: boolean
                    create:
                      description: create determines whether the kube-bind konnector
                        will sync matching objects from the provider cluster down
                        to the consumer cluster. only for owner Provider
                      properties:
                        replaceExisting:
                          description: "replaceExisting means that an existing object
                            owned by the consumer will be replaced by the provider
                            object. \n If set to false, and a conflicting consumer
                            object exists, it is not touched."
                          type: boolean
                      type: object
                    group:
                      default: ""
                      description: group is the name of an API group. For core groups
                        this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    onConflict:
                      description: onConflict determines how the conflicts between
                        objects on the consumer cluster will be resolved.
                      properties:
                        recreateWhenConsumerSideDeleted:
                          default: true
                          description: "recreateWhenConsumerSideDeleted set to true
                            (the default) means the provider will recreate the object
                            in case the object is missing on the consumer cluster,
                            but has been synchronized before. \n If set to false,
                            deleted provider-owned objects get deleted on the provider
                            cluster as well. \n Even if the consumer mistakenly or
                            intentionally deletes the object, the provider will recreate
                            it. If the field is set as false, the provider will not
                            recreate the object in case the object is deleted on the
                            consumer cluster."
                          type: boolean
                      type: object
                    read:
                      description: read claims read access to matching objects for
                        the provider. Reading of the claimed object(s) is always claimed.
                        By default, no labels and annotations can be read by the provider.
                        Reading of labels and annotations can be claimed in addition
                        by specifying them explicitly. If labels on consumer owned
                        objects that are set by the consumer are read, labelsOnProviderOwnedObjects
                        and annotationsOnProviderOwnedObjects can be set.
                      properties:
                        annotations:
                          description: annotations is a list of claimed annotation
                            key wildcard patterns that are synchronized from the consumer
                            cluster to the provider on objects that are owned by the
                            consumer.
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                        labels:
                          description: labels is a list of claimed label key wildcard
                            patterns that are synchronized from the consumer cluster
                            to the provider on objects that are owned by the consumer.
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                        labelsOnProviderOwnedObjects:
                          description: labelsOnProviderOwnedObjects is a list of claimed
                            label key wildcard patterns that are synchronized from
                            the consumer cluster to the provider on objects owned
                            by the provider.
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                        overrideAnnotations:
                          description: overrideAnnotations is a list of claimed annotation
                            key wildcard patterns that are synchronized from the consumer
                            cluster to the provider on objects owned by the provider.
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                      type: object
                    required:
                      description: required indicates whether the APIServiceBinding
                        will work if this claim is not accepted. If a required claim
                        is denied, the binding is aborted.
                      type: boolean
                    resource:
                      description: 'resource is the name of the resource. Note: it
                        is worth noting that you can not ask for permissions for resource
                        provided by a CRD not provided by an service binding export.'
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                    selector:
                      description: selector selects which resources are being claimed.
                        If unset, all resources across all namespaces are being claimed.
                      properties:
                        fieldSelectors:
                          description: fieldSelectors is a list of field selectors
                            matching selected resources, see https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/.
                          items:
                            type: string
                          type: array
                        labelSelectors:
                          description: labelSelectors is a list of label selectors
                            matching selected resources. label selectors follow the
                            same rules as kubernetes label selectors, see https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/.
                          items:
                            additionalProperties:
                              type: string
                            type: object
                          type: array
                        names:
                          default:
                          - '*'
                          description: "names is a list of specific resource names
                            to select. Names matches the metadata.name field of the
                            underlying object. An entry of \"*\" anywhere in the list
                            means all object names of the group/resource within the
                            \"namespaces\" field are claimed. Wildcard entries other
                            than \"*\" and regular expressions are currently unsupported.
                            If a resources name matches any value in names, the resource
                            name is considered matching. \n // +kubebuilder:validation:XValidation:rule=\"self.all(n,
                            n.matches('^[A-z-]+|[*]$'))\",message=\"only names or
                            * are allowed\""
                          items:
                            type: string
                          type: array
                        namespaces:
                          default:
                          - '*'
                          description: "namespaces represents namespaces where an
                            object of the given group/resource may be managed. Namespaces
                            matches against the metadata.namespace field. A value
                            of \"*\" matches namespaced objects across all namespaces.
                            If a resources namespace matches any value in namespaces,
                            the resource namespace is considered matching. If the
                            claim is for a cluster-scoped resource, namespaces has
                            to explicitly be set to an empty array to prevent defaulting
                            to \"*\". If the \"names\" field is unset, all objects
                            of the group/resource within the listed namespaces (or
                            cluster) will be claimed. \n // +kubebuilder:validation:XValidation:rule=\"self.all(n,
                            n.matches('^[A-z-]+|[*]$'))\",message=\"only names or
                            * are allowed\""
                          items:
                            type: string
                          type: array
                        owner:
                          description: owner matches the resource's owner. If an owner
                            selector is set, resources owned by other owners will
                            not be claimed. Resources without a present owner will
                            be considered, if configured owner could be the owner
                            of the object. For example, if the consumer creates a
                            resource that is claimed by the provider for reading.
                            In this case the resource will be marked as owned by the
                            consumer, and handled as such in further reconciliations.
                            An unset owner selector means objects from both sides
                            are considered.
                          enum:
                          - Provider
                          - Consumer
                          type: string
                      type: object
                    update:
                      description: update lists which updates to objects on the consumer
                        cluster are claimed. By default, the whole object is synced,
                        but metadata is not.
                      properties:
                        alwaysRecreate:
                          description: "alwaysRecreate, when true will delete the
                            old object and create new ones instead of updating. Useful
                            for immutable objects. \n This does not apply to metadata
                            field updates."
                          type: boolean
                        annotations:
                          description: "annotations is a list of claimed annotation
                            keys or annotation wildcard patterns that are synchronized
                            from the provider to the consumer for objects owned by
                            the provider. \n By default, no annotations are synced."
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                        annotationsOnConsumerOwnedObjects:
                          description: "annotationsOnConsumerOwnedObjects is a list
                            of claimed annotation key wildcard patterns that are synchronized
                            from the provider to the consumer for objects owned by
                            the consumer. \n By default, no annotations are synced."
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                        fields:
                          description: "fields are a list of JSON Paths describing
                            which parts of an object the provider wants to control.
                            \n This field is ignored if the owner in the claim selector
                            is set to \"Provider\"."
                          items:
                            type: string
                          type: array
                        labels:
                          description: "labels is a list of claimed label keys or
                            label wildcard patterns that are synchronized from the
                            provider to the consumer for objects owned by the provider.
                            \n By default, no labels are synced."
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                        labelsOnConsumerOwnedObjects:
                          description: "labelsOnConsumerOwnedObjects is a list of
                            claimed label key wildcard patterns that are synchronized
                            from the provider to the consumer for objects owned by
                            the consumer. \n By default, no labels are synced."
                          items:
                            properties:
                              pattern:
                                type: string
                            type: object
                          type: array
                        preserving:
                          description: "preserving is a list of JSON Paths describing
                            which parts of an object owned by the provider the consumer
                            keeps controlling. \n This field is ignored if the owner
                            in the claim selector is set to \"Consumer\"."
                          items:
                            type: string
                          type: array
                      type: object
                    version:
                      description: version is the version of the claimed resource.
                      minLength: 1
                      type: string
                  required:
                  - resource
                  - version
                  type: object
                  x-kubernetes-validations:
                  - message: donate and adopt are mutually exclusive
                    rule: '!(has(self.autoDonate) && self.autoDonate && has(self.autoAdopt)
                      && self.autoAdopt)'
                type: array
              scope:
                description: scope indicates whether the defined custom resource is
                  cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
                enum:
                - Cluster
                - Namespaced
                type: string
              versions:
                description: "versions is the API version of the defined custom resource.
                  \n Note: the OpenAPI v3 schemas must be equal for all versions until
                  CEL version migration is supported."
                items:
                  description: APIServiceExportVersion describes one API version of
                    a resource.
                  properties:
                    additionalPrinterColumns:
                      description: additionalPrinterColumns specifies additional columns
                        returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                        for details. If no columns are specified, a single column
                        displaying the age of the custom resource is used.
                      items:
                        description: CustomResourceColumnDefinition specifies a column
                          for server side printing.
                        properties:
                          description:
                            description: description is a human readable description
                              of this column.
                            type: string
                          format:
                            description: format is an optional OpenAPI type definition
                              for this column. The 'name' format is applied to the
                              primary identifier column to assist in clients identifying
                              column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                              for details.
                            type: string
                          jsonPath:
                            description: jsonPath is a simple JSON path (i.e. with
                              array notation) which is evaluated against each custom
                              resource to produce the value for this column.
                            type: string
                          name:
                            description: name is a human readable name for the column.
                            type: string
                          priority:
                            description: priority is an integer defining the relative
                              importance of this column compared to others. Lower
                              numbers are considered higher priority. Columns that
                              may be omitted in limited space scenarios should be
                              given a priority greater than 0.
                            format: int32
                            type: integer
                          type:
                            description: type is an OpenAPI type definition for this
                              column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                              for details.
                            type: string
                        required:
                        - jsonPath
                        - name
                        - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    deprecated:
                      description: deprecated indicates this version of the custom
                        resource API is deprecated. When set to true, API requests
                        to this version receive a warning header in the server response.
                        Defaults to false.
                      type: boolean
                    deprecationWarning:
                      description: deprecationWarning overrides the default warning
                        returned to API clients. May only be set when `deprecated`
                        is true. The default warning indicates this version is deprecated
                        and recommends use of the newest served version of equal or
                        greater stability, if one exists.
                      type: string
                    name:
                      description: name is the version name, e.g. “v1”, “v2beta1”,
                        etc. The custom resources are served under this version at
                        `/apis/<group>/<version>/...` if `served` is true.
                      minLength: 1
                      pattern: ^v[1-9][0-9]*([a-z]+[1-9][0-9]*)?$
                      type: string
                    schema:
                      description: schema describes the structural schema used for
                        validation, pruning, and defaulting of this version of the
                        custom resource.
                      properties:
                        openAPIV3Schema:
                          description: openAPIV3Schema is the OpenAPI v3 schema to
                            use for validation and pruning.
                          type: object
                          x-kubernetes-map-type: atomic
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - openAPIV3Schema
                      type: object
                    served:
                      default: true
                      description: served is a flag enabling/disabling this version
                        from being served via REST APIs
                      type: boolean
                    storage:
                      description: storage indicates this version should be used when
                        persisting custom resources to storage. There must be exactly
                        one version with storage=true.
                      type: boolean
                    subresources:
                      description: subresources specify what subresources this version
                        of the defined custom resource have.
                      properties:
                        scale:
                          description: scale indicates the custom resource should
                            serve a `/scale` subresource that returns an `autoscaling/v1`
                            Scale object.
                          properties:
                            labelSelectorPath:
                              description: 'labelSelectorPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `status.selector`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.status`
                                or `.spec`. Must be set to work with HorizontalPodAutoscaler.
                                The field pointed by this JSON path must be a string
                                field (not a complex selector struct) which contains
                                a serialized label selector in string form. More info:
                                https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                                If there is no value under the given path in the custom
                                resource, the `status.selector` value in the `/scale`
                                subresource will default to the empty string.'
                              type: string
                            specReplicasPath:
                              description: specReplicasPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `spec.replicas`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.spec`.
                                If there is no value under the given path in the custom
                                resource, the `/scale` subresource will return an
                                error on GET.
                              type: string
                            statusReplicasPath:
                              description: statusReplicasPath defines the JSON path
                                inside of a custom resource that corresponds to Scale
                                `status.replicas`. Only JSON paths without the array
                                notation are allowed. Must be a JSON Path under `.status`.
                                If there is no value under the given path in the custom
                                resource, the `status.replicas` value in the `/scale`
                                subresource will default to 0.
                              type: string
                          required:
                          - specReplicasPath
                          - statusReplicasPath
                          type: object
                        status:
                          description: 'status indicates the custom resource should
                            serve a `/status` subresource. When enabled: 1. requests
                            to the custom resource primary endpoint ignore changes
                            to the `status` stanza of the object. 2. requests to the
                            custom resource `/status` subresource ignore changes to
                            anything other than the `status` stanza of the object.'
                          type: object
                      type: object
                  required:
                  - name
                  - schema
                  - served
                  - storage
                  type: object
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - informerScope
            type: object
            x-kubernetes-validations:
            - message: informerScope is must be Cluster for cluster-scoped resources
              rule: self.scope == "Namespaced" || self.informerScope == "Cluster"
          status:
            description: status contains reconciliation information for the resource.
            properties:
              acceptedNames:
                description: acceptedNames are the names that are actually being used
                  to serve discovery. They may be different than the names in spec.
                properties:
                  categories:
                    description: categories is a list of grouped resources this custom
                      resource belongs to (e.g. 'all'). This is published in API discovery
                      documents, and used by clients to support invocations like `kubectl
                      get all`.
                    items:
                      type: string
                    type: array
                  kind:
                    description: kind is the serialized kind of the resource. It is
                      normally CamelCase and singular. Custom resource instances will
                      use this value as the `kind` attribute in API calls.
                    type: string
                  listKind:
                    description: listKind is the serialized kind of the list for this
                      resource. Defaults to "`kind`List".
                    type: string
                  plural:
                    description: plural is the plural name of the resource to serve.
                      The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                      Must match the name of the CustomResourceDefinition (in the
                      form `<names.plural>.<group>`). Must be all lowercase.
                    type: string
                  shortNames:
                    description: shortNames are short names for the resource, exposed
                      in API discovery documents, and used by clients to support invocations
                      like `kubectl get <shortname>`. It must be all lowercase.
                    items:
                      type: string
                    type: array
                  singular:
                    description: singular is the singular name of the resource. It
                      must be all lowercase. Defaults to lowercased `kind`.
                    type: string
                required:
                - kind
                - plural
                type: object
              conditions:
                description: conditions is a list of conditions that apply to the
                  APIServiceExport. It is updated by the konnector on the consumer
                  cluster.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              storedVersions:
                description: storedVersions lists all versions of CustomResources
                  that were ever persisted. Tracking these versions allows a migration
                  path for stored versions in etcd. The field is mutable so a migration
                  controller can finish a migration to another version (ensuring no
                  old objects are left in storage), and then remove the rest of the
                  versions from this list. Versions may not be removed from `spec.versions`
                  while they exist in this list.
                items:
                  type: string
                type: array
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: informerScope is immutable
          rule: self.metadata.name == self.spec.names.plural+"."+self.spec.group
    served: true
    storage: true
    subresources:
      status: {}
