/*
Copyright The Kube Bind Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	kubebindv1alpha2 "github.com/kube-bind/kube-bind/sdk/apis/kubebind/v1alpha2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// BoundSchemaLister helps list BoundSchemas.
// All objects returned here must be treated as read-only.
type BoundSchemaLister interface {
	// List lists all BoundSchemas in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.BoundSchema, err error)
	// BoundSchemas returns an object that can list and get BoundSchemas.
	BoundSchemas(namespace string) BoundSchemaNamespaceLister
	BoundSchemaListerExpansion
}

// boundSchemaLister implements the BoundSchemaLister interface.
type boundSchemaLister struct {
	listers.ResourceIndexer[*kubebindv1alpha2.BoundSchema]
}

// NewBoundSchemaLister returns a new BoundSchemaLister.
func NewBoundSchemaLister(indexer cache.Indexer) BoundSchemaLister {
	return &boundSchemaLister{listers.New[*kubebindv1alpha2.BoundSchema](indexer, kubebindv1alpha2.Resource("boundschema"))}
}

// BoundSchemas returns an object that can list and get BoundSchemas.
func (s *boundSchemaLister) BoundSchemas(namespace string) BoundSchemaNamespaceLister {
	return boundSchemaNamespaceLister{listers.NewNamespaced[*kubebindv1alpha2.BoundSchema](s.ResourceIndexer, namespace)}
}

// BoundSchemaNamespaceLister helps list and get BoundSchemas.
// All objects returned here must be treated as read-only.
type BoundSchemaNamespaceLister interface {
	// List lists all BoundSchemas in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.BoundSchema, err error)
	// Get retrieves the BoundSchema from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*kubebindv1alpha2.BoundSchema, error)
	BoundSchemaNamespaceListerExpansion
}

// boundSchemaNamespaceLister implements the BoundSchemaNamespaceLister
// interface.
type boundSchemaNamespaceLister struct {
	listers.ResourceIndexer[*kubebindv1alpha2.BoundSchema]
}
