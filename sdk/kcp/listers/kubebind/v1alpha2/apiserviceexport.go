/*
Copyright The Kube Bind Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by cluster-lister-gen. DO NOT EDIT.

package v1alpha2

import (
	kcplisters "github.com/kcp-dev/client-go/third_party/k8s.io/client-go/listers"
	"github.com/kcp-dev/logicalcluster/v3"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"

	kubebindv1alpha2 "github.com/kube-bind/kube-bind/sdk/apis/kubebind/v1alpha2"
)

// APIServiceExportClusterLister helps list APIServiceExports across all workspaces,
// or scope down to a APIServiceExportLister for one workspace.
// All objects returned here must be treated as read-only.
type APIServiceExportClusterLister interface {
	// List lists all APIServiceExports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.APIServiceExport, err error)
	// Cluster returns a lister that can list and get APIServiceExports in one workspace.
	Cluster(clusterName logicalcluster.Name) APIServiceExportLister
	APIServiceExportClusterListerExpansion
}

// aPIServiceExportClusterLister implements the APIServiceExportClusterLister interface.
type aPIServiceExportClusterLister struct {
	kcplisters.ResourceClusterIndexer[*kubebindv1alpha2.APIServiceExport]
}

var _ APIServiceExportClusterLister = new(aPIServiceExportClusterLister)

// NewAPIServiceExportClusterLister returns a new APIServiceExportClusterLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
// - has the kcpcache.ClusterAndNamespaceIndex as an index
func NewAPIServiceExportClusterLister(indexer cache.Indexer) APIServiceExportClusterLister {
	return &aPIServiceExportClusterLister{
		kcplisters.NewCluster[*kubebindv1alpha2.APIServiceExport](indexer, kubebindv1alpha2.Resource("apiserviceexport")),
	}
}

// Cluster scopes the lister to one workspace, allowing users to list and get APIServiceExports.
func (l *aPIServiceExportClusterLister) Cluster(clusterName logicalcluster.Name) APIServiceExportLister {
	return &aPIServiceExportLister{
		l.ResourceClusterIndexer.WithCluster(clusterName),
	}
}

// aPIServiceExportLister can list all APIServiceExports inside a workspace
// or scope down to a APIServiceExportNamespaceLister for one namespace.
type aPIServiceExportLister struct {
	kcplisters.ResourceIndexer[*kubebindv1alpha2.APIServiceExport]
}

var _ APIServiceExportLister = new(aPIServiceExportLister)

// APIServiceExportLister can list APIServiceExports across all namespaces, or scope down to a APIServiceExportNamespaceLister for one namespace.
// All objects returned here must be treated as read-only.
type APIServiceExportLister interface {
	// List lists all APIServiceExports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.APIServiceExport, err error)
	// APIServiceExports returns a lister that can list and get APIServiceExports in one workspace and namespace.
	APIServiceExports(namespace string) APIServiceExportNamespaceLister
	APIServiceExportListerExpansion
}

// APIServiceExports returns an object that can list and get APIServiceExports in one namespace.
func (l *aPIServiceExportLister) APIServiceExports(namespace string) APIServiceExportNamespaceLister {
	return &aPIServiceExportNamespaceLister{
		l.ResourceIndexer.WithNamespace(namespace),
	}
}

// aPIServiceExportNamespaceLister implements the APIServiceExportNamespaceLister
// interface.
type aPIServiceExportNamespaceLister struct {
	kcplisters.ResourceIndexer[*kubebindv1alpha2.APIServiceExport]
}

var _ APIServiceExportNamespaceLister = new(aPIServiceExportNamespaceLister)

// APIServiceExportNamespaceLister can list all APIServiceExports, or get one in particular.
// All objects returned here must be treated as read-only.
type APIServiceExportNamespaceLister interface {
	// List lists all APIServiceExports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.APIServiceExport, err error)
	// Get retrieves the APIServiceExport from the indexer for a given workspace, namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*kubebindv1alpha2.APIServiceExport, error)
	APIServiceExportNamespaceListerExpansion
}

// NewAPIServiceExportLister returns a new APIServiceExportLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
// - has the kcpcache.ClusterAndNamespaceIndex as an index
func NewAPIServiceExportLister(indexer cache.Indexer) APIServiceExportLister {
	return &aPIServiceExportLister{
		kcplisters.New[*kubebindv1alpha2.APIServiceExport](indexer, kubebindv1alpha2.Resource("apiserviceexport")),
	}
}

// aPIServiceExportScopedLister can list all APIServiceExports inside a workspace
// or scope down to a APIServiceExportNamespaceLister for one namespace.
type aPIServiceExportScopedLister struct {
	kcplisters.ResourceIndexer[*kubebindv1alpha2.APIServiceExport]
}

// APIServiceExports returns an object that can list and get APIServiceExports in one namespace.
func (l *aPIServiceExportScopedLister) APIServiceExports(namespace string) APIServiceExportLister {
	return &aPIServiceExportLister{
		l.ResourceIndexer.WithNamespace(namespace),
	}
}
