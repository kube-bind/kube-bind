/*
Copyright The Kube Bind Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by cluster-lister-gen. DO NOT EDIT.

package v1alpha2

import (
	kcplisters "github.com/kcp-dev/client-go/third_party/k8s.io/client-go/listers"
	"github.com/kcp-dev/logicalcluster/v3"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"

	kubebindv1alpha2 "github.com/kube-bind/kube-bind/sdk/apis/kubebind/v1alpha2"
)

// APIServiceNamespaceClusterLister helps list APIServiceNamespaces across all workspaces,
// or scope down to a APIServiceNamespaceLister for one workspace.
// All objects returned here must be treated as read-only.
type APIServiceNamespaceClusterLister interface {
	// List lists all APIServiceNamespaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.APIServiceNamespace, err error)
	// Cluster returns a lister that can list and get APIServiceNamespaces in one workspace.
	Cluster(clusterName logicalcluster.Name) APIServiceNamespaceLister
	APIServiceNamespaceClusterListerExpansion
}

// aPIServiceNamespaceClusterLister implements the APIServiceNamespaceClusterLister interface.
type aPIServiceNamespaceClusterLister struct {
	kcplisters.ResourceClusterIndexer[*kubebindv1alpha2.APIServiceNamespace]
}

var _ APIServiceNamespaceClusterLister = new(aPIServiceNamespaceClusterLister)

// NewAPIServiceNamespaceClusterLister returns a new APIServiceNamespaceClusterLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
// - has the kcpcache.ClusterAndNamespaceIndex as an index
func NewAPIServiceNamespaceClusterLister(indexer cache.Indexer) APIServiceNamespaceClusterLister {
	return &aPIServiceNamespaceClusterLister{
		kcplisters.NewCluster[*kubebindv1alpha2.APIServiceNamespace](indexer, kubebindv1alpha2.Resource("apiservicenamespace")),
	}
}

// Cluster scopes the lister to one workspace, allowing users to list and get APIServiceNamespaces.
func (l *aPIServiceNamespaceClusterLister) Cluster(clusterName logicalcluster.Name) APIServiceNamespaceLister {
	return &aPIServiceNamespaceLister{
		l.ResourceClusterIndexer.WithCluster(clusterName),
	}
}

// aPIServiceNamespaceLister can list all APIServiceNamespaces inside a workspace
// or scope down to a APIServiceNamespaceNamespaceLister for one namespace.
type aPIServiceNamespaceLister struct {
	kcplisters.ResourceIndexer[*kubebindv1alpha2.APIServiceNamespace]
}

var _ APIServiceNamespaceLister = new(aPIServiceNamespaceLister)

// APIServiceNamespaceLister can list APIServiceNamespaces across all namespaces, or scope down to a APIServiceNamespaceNamespaceLister for one namespace.
// All objects returned here must be treated as read-only.
type APIServiceNamespaceLister interface {
	// List lists all APIServiceNamespaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.APIServiceNamespace, err error)
	// APIServiceNamespaces returns a lister that can list and get APIServiceNamespaces in one workspace and namespace.
	APIServiceNamespaces(namespace string) APIServiceNamespaceNamespaceLister
	APIServiceNamespaceListerExpansion
}

// APIServiceNamespaces returns an object that can list and get APIServiceNamespaces in one namespace.
func (l *aPIServiceNamespaceLister) APIServiceNamespaces(namespace string) APIServiceNamespaceNamespaceLister {
	return &aPIServiceNamespaceNamespaceLister{
		l.ResourceIndexer.WithNamespace(namespace),
	}
}

// aPIServiceNamespaceNamespaceLister implements the APIServiceNamespaceNamespaceLister
// interface.
type aPIServiceNamespaceNamespaceLister struct {
	kcplisters.ResourceIndexer[*kubebindv1alpha2.APIServiceNamespace]
}

var _ APIServiceNamespaceNamespaceLister = new(aPIServiceNamespaceNamespaceLister)

// APIServiceNamespaceNamespaceLister can list all APIServiceNamespaces, or get one in particular.
// All objects returned here must be treated as read-only.
type APIServiceNamespaceNamespaceLister interface {
	// List lists all APIServiceNamespaces in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kubebindv1alpha2.APIServiceNamespace, err error)
	// Get retrieves the APIServiceNamespace from the indexer for a given workspace, namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*kubebindv1alpha2.APIServiceNamespace, error)
	APIServiceNamespaceNamespaceListerExpansion
}

// NewAPIServiceNamespaceLister returns a new APIServiceNamespaceLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
// - has the kcpcache.ClusterAndNamespaceIndex as an index
func NewAPIServiceNamespaceLister(indexer cache.Indexer) APIServiceNamespaceLister {
	return &aPIServiceNamespaceLister{
		kcplisters.New[*kubebindv1alpha2.APIServiceNamespace](indexer, kubebindv1alpha2.Resource("apiservicenamespace")),
	}
}

// aPIServiceNamespaceScopedLister can list all APIServiceNamespaces inside a workspace
// or scope down to a APIServiceNamespaceNamespaceLister for one namespace.
type aPIServiceNamespaceScopedLister struct {
	kcplisters.ResourceIndexer[*kubebindv1alpha2.APIServiceNamespace]
}

// APIServiceNamespaces returns an object that can list and get APIServiceNamespaces in one namespace.
func (l *aPIServiceNamespaceScopedLister) APIServiceNamespaces(namespace string) APIServiceNamespaceLister {
	return &aPIServiceNamespaceLister{
		l.ResourceIndexer.WithNamespace(namespace),
	}
}
